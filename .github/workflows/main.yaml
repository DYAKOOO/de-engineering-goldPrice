name: Gold Price Data Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *' # Runs at 00:00 UTC every day

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-west1

jobs:
  deploy:
    name: Deploy to GCP
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.21'

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: Configure Docker
      run: |
        gcloud auth configure-docker gcr.io

    - name: Build and Push New Version
      id: build_version
      run: |
        NEW_VERSION=$(./version_increment.sh)
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
        docker build -t gcr.io/${{ env.PROJECT_ID }}/gold-price-producer:$NEW_VERSION -f Dockerfile-producer .
        docker push gcr.io/${{ env.PROJECT_ID }}/gold-price-producer:$NEW_VERSION

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy gold-price-ingestion \
          --image gcr.io/${{ env.PROJECT_ID }}/gold-price-producer:${{ steps.build_version.outputs.NEW_VERSION }} \
          --region ${{ env.REGION }} \
          --set-env-vars GCS_BUCKET=gold-price-raw-data \
          --service-account goldprice-service-account@${{ env.PROJECT_ID }}.iam.gserviceaccount.com

    - name: Update Cloud Function
      run: |
        gcloud functions deploy process_gold_price \
          --gen2 \
          --runtime python310 \
          --region ${{ env.REGION }} \
          --source . \
          --entry-point process_pubsub \
          --trigger-http \
          --allow-unauthenticated

    - name: Copy Spark scripts to Compute Engine
      run: |
        gcloud compute scp spark_jobs/* spark-instance:~/ --zone us-west1-a

    - name: Run Spark Jobs
      run: |
        gcloud compute ssh spark-instance --zone us-west1-a --command "
        spark-submit \
        --master local[*] \
        clean_transform.py && \
        spark-submit \
        --master local[*] \
        load_to_bigquery.py
        "

    - name: Trigger Cloud Run Service
      run: |
        CLOUD_RUN_URL=$(gcloud run services describe gold-price-ingestion --region ${{ env.REGION }} --format='value(status.url)')
        curl -X GET ${CLOUD_RUN_URL}/fetch-and-publish

    - name: Verify Deployment
      run: |
        gcloud run services describe gold-price-ingestion --region ${{ env.REGION }}
        gcloud functions describe process_gold_price --region ${{ env.REGION }}

    - name: Verify BigQuery Data
      run: |
        bq query --use_legacy_sql=false '
        SELECT COUNT(*) as row_count
        FROM `de-goldprice.gold_price_dataset.gold_prices`
        WHERE DATE(date) = DATE(CURRENT_TIMESTAMP())
        '

    - name: Clean up old images
      run: |
        OLD_VERSIONS=$(gcloud container images list-tags gcr.io/${{ env.PROJECT_ID }}/gold-price-producer --format='get(tags)' --sort-by=~tags | tail -n +6)
        for version in $OLD_VERSIONS; do
          gcloud container images delete gcr.io/${{ env.PROJECT_ID }}/gold-price-producer:$version --quiet
        done